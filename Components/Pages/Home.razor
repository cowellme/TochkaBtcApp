@page "/"
@rendermode InteractiveServer
@inject IJSRuntime JSRuntime


<PageTitle>Главная</PageTitle>
<div class="w-50 container-md mt-5 pb-5">
    

    <style>
        .changelog-container {
            font-family: 'Segoe UI', Arial, sans-serif;
            max-width: 800px;
            margin: 20px auto;
            border: 1px solid #e1e4e8;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        }

        .changelog-header {
            background: #171d26;
            padding: 15px 20px;
            border-bottom: 1px solid #e1e4e8;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .version-badge {
            background: #0366d6;
            color: white;
            padding: 3px 8px;
            border-radius: 12px;
            font-size: 0.9em;
        }

        .release-date {
            color: #586069;
            font-size: 0.9em;
        }

        .changelog-section {
            color: #e1e4e8;
            padding: 15px 20px;
            border-bottom: 1px solid #eaecef;
        }

        .changelog-section:last-child {
            border-bottom: none;
        }

        .changelog-section h4 {
            margin-top: 0;
            margin-bottom: 10px;
            color: #c0c6cc;
            display: flex;
            align-items: center;
        }

        .changelog-section h4 i {
            margin-right: 10px;
            color: #6a737d;
        }

        .change-type {
            display: inline-block;
            font-size: 0.8em;
            font-weight: bold;
            padding: 2px 6px;
            border-radius: 4px;
            margin-right: 8px;
            text-transform: uppercase;
        }

        .change-type.new {
            background: #28a745;
            color: white;
        }

        .change-type.fixed {
            background: #d73a49;
            color: white;
        }

        .change-type.improved {
            background: #005cc5;
            color: white;
        }

        .exchange-list {
            list-style-type: none;
            padding-left: 5px;
        }

        .exchange-list li {
            display: flex;
            align-items: center;
            margin: 5px 0;
        }

        .exchange-list img {
            width: 20px;
            height: 20px;
            margin-right: 8px;
        }

        .indicator-name {
            font-style: italic;
            color: #6a737d;
            font-weight: 500;
        }
    </style>
</div>

<div class="cookie-alert" style="@(isVisible ? "" : "display:none;")">
    <div class="cookie-content">
        <span class="cookie-text">
            Мы используем cookies для работы сервиса
        </span>
        <button class="cookie-btn" @onclick="Accept">OK</button>
    </div>
</div>

@code {
    private bool isVisible = false; // Начинаем с false, пока не проверим localStorage

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
    // Проверяем наличие записи в localStorage
                var accepted = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "cookiesAccepted");
                isVisible = accepted != "true"; // Показываем только если не принято
            }
            catch (Exception ex)
            {
    // В случае ошибки показываем уведомление (можно логировать ошибку)
                isVisible = true;
                Console.WriteLine($"Ошибка доступа к localStorage: {ex.Message}");
            }
            finally
            {
                StateHasChanged(); // Обязательно обновляем состояние
            }
        }
    }

    private async Task Accept()
    {
        try
        {
            await JSRuntime.InvokeVoidAsync("localStorage.setItem", "cookiesAccepted", "true");
            isVisible = false;
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Ошибка при сохранении в localStorage: {ex.Message}");
        }
    }
}

<style>
    .cookie-alert {
        position: fixed;
        bottom: 20px;
        right: 20px;
        z-index: 1000;
    }

    .cookie-content {
        background: #fff;
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        padding: 12px 16px;
        display: flex;
        align-items: center;
        max-width: 300px;
        border-left: 4px solid #4a6bdf;
    }

    .cookie-text {
        font-size: 14px;
        margin-right: 12px;
        color: #333;
    }

    .cookie-text i {
        color: #4a6bdf;
        margin-right: 8px;
    }

    .cookie-btn {
        background: #4a6bdf;
        color: white;
        border: none;
        border-radius: 4px;
        padding: 6px 12px;
        font-size: 13px;
        cursor: pointer;
        transition: background 0.2s;
    }

    .cookie-btn:hover {
        background: #3a5bcf;
    }
</style>