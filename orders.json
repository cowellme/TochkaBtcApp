        public async Task<(bool status, string message)> NewUser(User user)
        {
            return await Task.Run(() =>
            {
                if (Users.Any(x => x.Login == user.Login)) throw new Exception("Данный логин уже используется");

                try
                {
                    Users.Add(user);
                    SaveChangesAsync();
                    return (true, "Success");
                }
                catch (Exception ex)
                {
                    return (false, ex.Message);
                }
            });
        }

        public async Task<(bool status, string message)> DeleteUser(User user)
        {
            return await Task.Run(() =>
            {
                if (!Users.Any(x => x.Login == user.Login)) throw new Exception("Пользователя не существует");
                
                try
                {
                    Users.Remove(user);
                    SaveChangesAsync();
                    return (true, "Success");
                }
                catch (Exception ex)
                {
                    return (false, ex.Message);
                }
            });
        }

        public async Task<(bool status, string message)> UpdateUser(User user)
        {
            return await Task.Run(() =>
            {
                if (!Users.Any(x => x.Login == user.Login)) throw new Exception("Пользователя не существует");

                try
                {
                    Users.Update(user);
                    SaveChangesAsync();
                    return (true, "Success");
                }
                catch (Exception ex)
                {
                    return (false, ex.Message);
                }
            });
        }

